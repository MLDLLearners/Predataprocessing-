# -*- coding: utf-8 -*-
"""
Created on Sat Jan 19 17:30:52 2019

@author: Mallikarjunaiah.M
"""


print("Hellow world!")
import numpy as np
import pandas as p
import matplotlib.pyplot as plt


dataset= p.read_csv('Data.csv')
x=dataset.iloc[:,:-1].values
y=dataset.iloc[:,3].values
# data missing part which can fill using mean calc
from sklearn.preprocessing import Imputer

imputer=Imputer(missing_values='NaN',strategy='mean',axis=0)
imputer=imputer.fit(x[:,1:3])
x[:,1:3]= imputer.transform(x[:,1:3])

# Data classification part which can segrigated into feature n label
from sklearn.preprocessing import LabelEncoder,OneHotEncoder
label_x=LabelEncoder()

x[:, 0]=label_x.fit_transform(x[:, 0])

oneHotEncoder=OneHotEncoder(categorical_features=[0])

x=oneHotEncoder.fit_transform(x).toarray()

label_y=LabelEncoder()

y=label_y.fit_transform(y)

#Plotting to our canvas
plt.plot(x,y)

#Showing what we plotted
plt.show()

#splitting the data set into training set and test set
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y, test_size=0.2,random_state=0)

#feature scalling is used to scala the variable of independent and depends variable
from sklearn.preprocessing import StandardScaler

s=StandardScaler()
x_train=s.fit_transform(x_train)
x_test=s.transform(x_test)








